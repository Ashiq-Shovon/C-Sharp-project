<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>